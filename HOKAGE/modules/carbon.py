import asyncio
from io import BytesIO
from pyrogram.types import Message
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from pyrogram.errors import MessageNotModified
from HOKAGE import aiohttpsession as aiosession
from HOKAGE import pgram
from pyrogram import Client, filters
from HOKAGE.utils.errors import capture_err



REPO_TEXT = """
‚ùÇ  ú·¥è·¥ã·¥Ä…¢·¥á …™s ·¥Ä…¥ ·¥Ä…¥…™·¥ç·¥á ·¥Ñ ú·¥Ä Ä·¥Ä·¥Ñ·¥õ·¥á Ä “ì Ä·¥è·¥ç ·¥Ñ ú·¥Ä…™…¥s·¥Ä·¥° ·¥ç·¥Ä…¥ ·¥Ä…¥…™·¥ç·¥á.

‚ùÇ ·¥°·¥á ·¥ç·¥Ä·¥Ö·¥á ·¥õ ú…™s  ú·¥è·¥ã·¥Ä…¢·¥á   ô·¥á·¥Ñ·¥Ä·¥ús·¥á ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ä  ú·¥è·¥ã·¥Ä…¢·¥á ·¥è…¥ ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥ò·¥è·¥ò·¥ú ü·¥Ä Ä ·¥Ä…¥·¥Ö s ú·¥á …™s ·¥è…¥·¥á ·¥è“ì ·¥õ ú·¥á  ô·¥ás·¥õ ·¥Ä…¥…™·¥ç·¥á ·¥õ ú·¥á·¥ç·¥á·¥Ö ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç ·¥ç·¥Ä…¥·¥Ä…¢·¥á·¥ç·¥á…¥·¥õ  ô·¥è·¥õ ·¥õ ú·¥è·¥ú…¢ ú  ú·¥á Ä  Ä·¥á·¥ò·¥è …™s …¥·¥è·¥õ ·¥ò·¥ú ô ü…™·¥Ñ s·¥è ·¥Ä…¥ è·¥è…¥·¥á ·¥Ñ·¥Ä…¥'·¥õ ·¥ç·¥Ä·¥ã·¥á ·¥è·¥°…¥  ú·¥è·¥ã·¥Ä…¢·¥á ·¥Ä…¥·¥Ö ·¥Ö·¥á·¥ò ü·¥è è …™·¥õ.

‚ùÇ s·¥è ·¥°·¥á ·¥õ ú·¥è·¥ú…¢ ú·¥õ  ü·¥á·¥õs …¢…™·¥†·¥á …™·¥õ ·¥Ä ·¥õ Ä è ·¥Ä…¥·¥Ö ·¥ç·¥Ä·¥ã·¥á ·¥è·¥°…¥  ú·¥è·¥ã·¥Ä…¢·¥á ·¥Ä…¥·¥Ö ·¥°·¥á ·¥ã…¥·¥è·¥° ·¥õ ú·¥Ä·¥õ ·¥°·¥á ·¥Ä Ä·¥á …¥·¥è·¥õ s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü …™…¥ ·¥Ñ·¥è·¥ò è…™…¥…¢ ·¥õ ú·¥á ·¥è Ä…™…¢…™…¥·¥Ä ü …¢·¥è·¥Ö·¥Ö·¥áss  ú·¥è·¥ã·¥Ä…¢·¥á  ô·¥ú·¥õ ·¥°·¥á ·¥Ä·¥õ ü·¥á·¥Äs·¥õ …¢…™·¥†·¥á …™·¥õ ·¥Ä ·¥õ Ä è
·¥Ä…¥·¥Ö  ú·¥è·¥ã·¥Ä…¢·¥á  Ä·¥á·¥ò·¥è …™s …¥·¥è·¥° ·¥ò·¥ú ô ü…™·¥Ñ  ô è ·¥Ñ ü…™·¥Ñ·¥ã…™…¥…¢ ·¥è…¥ ·¥õ ú·¥á  ô·¥á ü·¥è·¥°  ô·¥ú·¥õ·¥õ·¥è…¥  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥Ö·¥á·¥ò ü·¥è è  è·¥è·¥ú Ä ·¥è·¥°…¥  ú·¥è·¥ã·¥Ä…¢·¥á.

‚ö†Ô∏è …¥·¥è·¥õ·¥á :- 2.0 …™s …™…¥ ·¥ò Ä·¥è·¥Ñ·¥áss ·¥°·¥á ·¥°…™ ü ü  Ä·¥á ü·¥á·¥Äs·¥á …™·¥õ s·¥è·¥è…¥  ô·¥ú·¥õ  ú·¥è·¥ã·¥Ä…¢·¥á 2.0  Ä·¥á·¥ò·¥è ·¥°…™ ü ü  ô·¥á ·¥ò Ä…™·¥†·¥Ä·¥õ·¥á s·¥è …™“ì ·¥°·¥Ä…¥·¥õ ·¥õ·¥è  ô·¥ú è ·¥õ ú·¥Ä·¥õ  Ä·¥á·¥ò·¥è ·¥õ ú·¥Ä…¥  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ.
"""

async def make_carbon(code):
    url = "https://carbonara.vercel.app/api/cook"
    async with aiosession.post(url, json={"code": code}) as resp:
        image = BytesIO(await resp.read())
    image.name = "carbon.png"
    return image


@pgram.on_message(filters.command("carbon"))
@capture_err
async def carbon_func(_, message):
    if not message.reply_to_message:
        return await message.reply_text("` Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥õ·¥áx·¥õ ·¥õ·¥è …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á ·¥Ñ·¥Ä Ä ô·¥è…¥`")
    if not message.reply_to_message.text:
        return await message.reply_text("` Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥õ·¥áx·¥õ ·¥õ·¥è …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á ·¥Ñ·¥Ä Ä ô·¥è…¥`")
    m = await message.reply_text("`…¢·¥á…¥·¥á Ä·¥Ä·¥õ…™…¥…¢ ·¥Ñ·¥Ä Ä ô·¥è…¥...`")
    carbon = await make_carbon(message.reply_to_message.text)
    await m.edit("`waitoo...`")
    await pgram.send_photo(message.chat.id, carbon)
    await m.delete()
    carbon.close()



@pgram.on_message(filters.command("repo"))
@capture_err
async def help(client: Client, message: Message):
    get_me = await client.get_me()
    self.username = get_me.username
    buttons =  [
           [
        InlineKeyboardButton(text="üêô  Ä·¥á·¥ò·¥ès…™·¥õ·¥è Ä è", url="https://github.com/Sumit9969/HokageRobot"),
        InlineKeyboardButton(
            text="üéì ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä", url="https://t.me/Mr_DiSasTer_XD"
        ),
    ],
    [
        InlineKeyboardButton(text="‚õΩ s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url=f"https://t.me/TechQuardSupport"),
        InlineKeyboardButton(
            text="üì£ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás", url=f"https://t.me/TechQuard"
        ),
    ],
           ]
    reply_markup = InlineKeyboardMarkup(buttons)
    await message.reply_photo(photo=f"https://te.legra.ph/file/501c5315150b4f27daf9f.mp4", caption=f"{REPO_TEXT}", reply_markup=reply_markup)


__mod_name__ = "ùô≤·¥Ä Ä ô·¥è…¥"

__help__ = """

/carbon *:* ·¥ç·¥Ä·¥ã·¥ás ·¥Ñ·¥Ä Ä ô·¥è…¥ “ì·¥è Ä  Ä·¥á·¥ò ü…™·¥á·¥Ö ·¥õ·¥áx·¥õ
/repo *:*üåü
 """
